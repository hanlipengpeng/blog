<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaopengpeng.mapper.TbMessageMapper" >
  <resultMap id="BaseResultMap" type="com.xiaopengpeng.pojo.TbMessage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="user_name" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xiaopengpeng.pojo.TbMessage" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, email, create_time
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  
  <!-- 手动编写 -->
  
  <select id="getAllMessage" resultMap="ResultMapWithBLOBs" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_message
  </select>
  
  
  
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xiaopengpeng.pojo.TbMessage" >
    insert into tb_message (id, user_name, email, 
      create_time, content)
    values (#{id,jdbcType=INTEGER}, #{user_name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{create_time,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaopengpeng.pojo.TbMessage" >
    insert into tb_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="user_name != null" >
        user_name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user_name != null" >
        #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaopengpeng.pojo.TbMessage" >
    update tb_message
    <set >
      <if test="user_name != null" >
        user_name = #{user_name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaopengpeng.pojo.TbMessage" >
    update tb_message
    set user_name = #{user_name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaopengpeng.pojo.TbMessage" >
    update tb_message
    set user_name = #{user_name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>